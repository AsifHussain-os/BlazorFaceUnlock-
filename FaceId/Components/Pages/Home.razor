@page "/"
@using FaceId.Services
@inject AuthService Auth
@inject NavigationManager Nav

<div class="container">
    @if (loading)
    {
        <h3 style="color: #666;">Loading...</h3>
    }
    else if (showContent)
    {
        <h1 style="color: #333; margin-bottom: 10px;">Welcome to the FaceId App!</h1>
        <span style="font-size: 18px; color: #555; display: block; margin-bottom: 30px;">You are authenticated and can use the app.</span>
        
        <!-- Your actual app content/dashboard goes here -->
        <div style="margin-bottom: 20px; padding: 15px; background-color: #f8f9fa; border-radius: 8px;">
            <h3 style="color: #333; margin-bottom: 10px;">Dashboard</h3>
            <p style="color: #666;">This is secure app.</p>
        </div>
        
        <button @onclick="Logout"
                style="padding: 12px 30px; background-color: #E74C3C; border: none; border-radius: 6px; color: white; font-weight: 600; font-size: 16px; cursor: pointer;"
                onmouseover="this.style.backgroundColor='#C0392B'"
                onmouseout="this.style.backgroundColor='#E74C3C'">
            Logout
        </button>
    }
</div>

@code {
    private bool loading = true;
    private bool showContent = false;

    protected override async Task OnInitializedAsync()
    {
        // Check if user came from successful authentication
        var uri = new Uri(Nav.Uri);
        var justAuthenticated = uri.Query.Contains("authenticated=true");

        if (justAuthenticated)
        {
            // User just authenticated, show the dashboard
            loading = false;
            showContent = true;
            return;
        }

        // User accessed directly without authentication - redirect to appropriate page
        if (!await Auth.HasCredentialsAsync())
        {
            // No credentials set up
            Nav.NavigateTo("/setaccount");
            return;
        }
        
        // Credentials exist, but user must login every time (banking style)
        Nav.NavigateTo("/login");
    }

    private void Logout()
    {
        Auth.SignOut(); // This does nothing in the simple version, but kept for consistency
        Nav.NavigateTo("/login");
    }
}