@page "/login"
@inject AuthService Auth
@inject NavigationManager Nav
@using FaceId.Services
@using Plugin.Maui.Biometric



<div class="container">

    @if (isCheckingBiometrics)
    {
        <span style="text-align:center; color:#666;">Checking biometric login...</span>
    }
    else
    {
        <h3 style="text-align:center; color:#333; margin-bottom: 25px;">Login</h3>

        @if (!string.IsNullOrEmpty(loginMessage))
        {
            <span style="color:red; text-align:center; margin-bottom: 20px;">@loginMessage</span>
        }

        <hr style="margin-bottom: 30px;" />

        <div style="margin-bottom: 20px;">
            <label style="font-weight: 600; color:#555;">PIN</label><br />
            <input @bind="pin" maxlength="6" style="width: 100%; padding: 10px; margin-top: 6px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" />
            <button @onclick="LoginWithPin" style="width: 100%; margin-top: 10px; padding: 12px; background-color: #3498db; color: white; border: none; border-radius: 6px; font-size: 16px; cursor: pointer;">
                Login with PIN
            </button>
        </div>

        <div style="margin-bottom: 25px;">
            <label style="font-weight: 600; color:#555;">Password</label><br />
            <input type="password" @bind="password" style="width: 100%; padding: 10px; margin-top: 6px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" />
            <button @onclick="LoginWithPassword" style="width: 100%; margin-top: 10px; padding: 12px; background-color: #2ecc71; color: white; border: none; border-radius: 6px; font-size: 16px; cursor: pointer;">
                Login with Password
            </button>
        </div>


        <button @onclick="NavigateToSetAccount" style="margin-top: 15px; background: transparent; border: none; color: #3498db; cursor: pointer;">
            Add Another Account
        </button>
    }
</div>

@code {

    private bool showEnableBiometricPrompt = false;
    private bool biometricAvailable = false;
    private bool isCheckingBiometrics = true; // <-- NEW loading flag
    private string pin = "";
    private string password = "";
    private string loginMessage = "";

    protected override async Task OnInitializedAsync()
    {
        if (await Auth.IsSignedInAsync())
        {
            Nav.NavigateTo("/"); // already signed in, skip login
            return;
        }

        // Skip biometric auto-login immediately after logout
        if (Auth.IsJustLoggedOut())
        {
            Auth.ResetLogoutFlag();
            biometricAvailable = false;
            isCheckingBiometrics = false;
            return; // Show login form without biometric prompt
        }


        biometricAvailable = await Auth.IsBiometricsEnabledAsync();

        if (biometricAvailable)
        {
            var success = await Auth.TryBiometricUnlockAsync();

            if (success)
            {
                await Auth.SignInAsync();
                Nav.NavigateTo("/"); // Navigate immediately on success
                return; // Important: exit so UI doesn't show
            }
        }

        // Biometric not available or failed, show login form
        isCheckingBiometrics = false;
    }


    private async Task LoginWithPin()
    {
        if (await Auth.ValidatePinAsync(pin))
        {
            await Auth.SignInAsync();

            Nav.NavigateTo("/");
        }
        else
        {
            loginMessage = "Incorrect PIN.";
        }
    }

    private async Task LoginWithPassword()
    {
        if (await Auth.ValidatePasswordAsync(password))
        {
            await Auth.SignInAsync();

            Nav.NavigateTo("/");
        }
        else
        {
            loginMessage = "Incorrect password.";
        }
    }

    void NavigateToSetAccount()
    {
        Nav.NavigateTo("/setaccount");
    }
}
