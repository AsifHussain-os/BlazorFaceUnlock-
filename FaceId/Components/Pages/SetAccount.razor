@page "/setaccount"
@using FaceId.Services
@inject AuthService Auth
@inject NavigationManager Nav

<div class="container">

    <h3 style="text-align: center; margin-bottom: 24px; color: #333;">Set Up Your Account</h3>

    <div style="margin-bottom: 20px;">
        <label style="display: block; margin-bottom: 6px; font-weight: 600; color: #555;">PIN (4-6 digits)</label>
        <input 
            @bind="pin" 
            maxlength="6" 
            style="width: 100%; padding: 10px; font-size: 16px; border: 1px solid #ccc; border-radius: 4px;" 
            placeholder="Enter your PIN" />
    </div>

    <div style="margin-bottom: 20px;">
        <label style="display: block; margin-bottom: 6px; font-weight: 600; color: #555;">Password</label>
        <input 
            type="password" 
            @bind="password" 
            style="width: 100%; padding: 10px; font-size: 16px; border: 1px solid #ccc; border-radius: 4px;" 
            placeholder="Enter your password" />
    </div>

    <button 
        @onclick="SaveAccount" 
        style="width: 100%; padding: 12px; background-color: #4A90E2; border: none; border-radius: 4px; color: white; font-weight: 700; font-size: 16px; cursor: pointer;"
        onmouseover="this.style.backgroundColor='#357ABD'"
        onmouseout="this.style.backgroundColor='#4A90E2'">
        Save & Continue
    </button>

    @if (!string.IsNullOrEmpty(message))
    {
        <p style="margin-top: 20px; color: #E74C3C; font-weight: 600; text-align: center;">@message</p>
    }
</div>

@code {
    private string pin = "";
    private string password = "";
    private bool enableBiometric = false;
    private bool biometricAvailable = false;
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            biometricAvailable = await Auth.IsBiometricsEnabledAsync();
        }
        catch
        {
            biometricAvailable = false;
        }
    }

    private async Task SaveAccount()
    {
        if (string.IsNullOrWhiteSpace(pin) && string.IsNullOrWhiteSpace(password))
        {
            message = "Please set at least a PIN or a Password.";
            return;
        }

        await Auth.SetCredentialsAsync(pin, password);

        await Auth.SignInAsync();
        Nav.NavigateTo("/");
    }
}
